---
import isBot from 'isbot';
import { Background } from '~/components/Background';
import { cn } from '~/utils/cn';
import { AstroSeo, type Props as SeoProps } from '@astrolib/seo';
import { Click } from '~/components/Click';

import '~/styles/global.css';

interface Props extends SeoProps {
	background?: boolean;
}

const {
	background = true,
	canonical = Astro.url.href,
	defaultTitle = 'developer â”€ nuro',
	description = "Hey ðŸ‘‹ I'm Ben, a developer",
	openGraph = {
		description: "Hey ðŸ‘‹ I'm Ben, a developer",
		images: [
			{
				url: new URL('/banner.png', Astro.url).href,
				width: 1280,
				height: 720,
				type: 'image/png',
			},
		],
		site_name: 'nuro',
		title: 'developer â”€ nuro',
		url: Astro.url.href,
	},
	title = 'developer',
	titleTemplate = '%s â”€ nuro',
	twitter = {
		cardType: 'summary_large_image',
		handle: '@nurodev',
		site: '@nurodev',
	},
	...rest
} = Astro.props;

const isWebCrawler = isBot(Astro.request.headers.get('user-agent'));
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="generator" content={Astro.generator} />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/png" href="/favicon.png" />

		<AstroSeo
			canonical={canonical}
			defaultTitle={defaultTitle}
			description={description}
			openGraph={openGraph}
			title={title}
			titleTemplate={titleTemplate}
			twitter={twitter}
			{...rest}
		/>
	</head>
	<body
		class={cn(
			'bg-gradient-to-br from-white from-20% via-gray-100 to-white to-80% dark:from-black dark:via-gray-700 dark:to-black',
			'font-sans text-gray-500',
			'scroll-smooth font-sans antialiased',
			'selection:bg-gray-900 selection:text-white selection:dark:bg-white selection:dark:text-primary-500',
		)}
	>
		<slot />
		<Click client:only />
		{background && !isWebCrawler ? <Background client:only /> : null}
	</body>
</html>
